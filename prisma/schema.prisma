// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  email       String    @unique @db.VarChar(256)
  name        String    @db.VarChar(256)
  phoneNumber String    @unique @map("phone_number") @db.VarChar(256)
  requests    Request[]
}

model Guard {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(256)
  email       String   @unique @db.VarChar(256)
  phoneNumber String   @unique @map("phone_number") @db.VarChar(256)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hasVehicle  Boolean  @default(false) @map("has_car")
  isGuard     Boolean  @default(false) @map("is_guard")
  isDriver    Boolean  @default(false) @map("is_driver")
  hasGun      Boolean  @default(false) @map("has_gun")

  requests Request[]
}

model Request {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now()) @map("created_at")
  isTaken         Boolean  @default(false) @map("is_taken")
  updatedAt       DateTime @updatedAt @map("updated_at")
  isActive        Boolean  @default(false)
  userId          Int      @map("user_id")
  guardId         Int?     @map("guard_id")
  user            User     @relation(fields: [userId], references: [id])
  guard           Guard?   @relation(fields: [guardId], references: [id])
  description     String   @db.VarChar(256)
  startingAddress String   @map("starting_address") @db.VarChar(256)
  endingAddress   String?  @map("ending_address") @db.VarChar(256)
  startingTime    String   @default("") @map("starting_time")
  isGuard         Boolean  @default(false) @map("is_guard")
  isDriver        Boolean  @default(false) @map("is_driver")
  hasGun          Boolean  @default(false) @map("has_gun")
  hasVehicle      Boolean  @default(false) @map("has_car")
  rentHours       Float?   @default(0.0) @map("rent_hours") @db.DoublePrecision
  totalCost       Float    @default(0.0) @map("total_cost") @db.DoublePrecision
}
